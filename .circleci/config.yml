version: 2.0 # use CircleCI 2.1

jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/eve-holder
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.7.9
        auth:
          username: $DOCKERHUB_USERNAME  # please add your docker username in circle ci project settings
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment: # environment variables for primary container
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
      - image: circleci/postgres:9.6.2
        auth:
          username: $DOCKERHUB_USERNAME  # please add your docker username in circle ci project settings
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment: # environment variables for the Postgres container.
          POSTGRES_USER: root
          POSTGRES_DB: circle_test


    steps:
      - checkout

      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Ensuring installed dependencies
          command: |
            pipenv install
            python3 -m venv --system-site-packages venv/
      - save_cache:
          paths:
            - ./venv
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Running tests
          command: |
            pipenv run python3 manage.py group
            pipenv run coverage run manage.py test --noinput
      - run:
          name: Send to codecov
          command: |
            pipenv run bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports
          destination: test-reports
